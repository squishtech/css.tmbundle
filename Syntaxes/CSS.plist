{
    name = "CSS"; 
    scopeName = "source.css";
    fileTypes = (css); 
    foldingStartMarker = "(/\\*|\\{|\\()"; 
    foldingStopMarker = "(\\*/|\\}|\\))"; 
    patterns = (
        {
            name = "keyword.selector.css";
            begin = "^(?=\\s*[.#a-zA-Z])";
            end = "(/\\*|\\{|\\s|$)";
            patterns = (
                {
                    name = "keyword.selector.html-element.css";
                    match = "\\<(a|abbr|acronym|address|area|b|base|big|blockquote|body|br|button|caption|cite|code|col|colgroup|dd|del|dfn|div|dl|dt|em|fieldset|form|frame|frameset|(h[1-6])|head|hr|html|i|iframe|img|input|ins|kbd|label|legend|li|link|map|meta|noframes|noscript|object|ol|optgroup|option|p|param|pre|q|samp|script|select|small|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|title|tr|tt|ul|var)\\>";
                },
                {
                    name = "keyword.selector.class.css";
                    match = "(\\.[a-zA-Z0-9_-]+)";
                },
                {   name = "keyword.selector.id.css";
                    match = "(#[a-zA-Z0-9_-]+)";
                },
                {
                    name = "keyword.selector.pseudo-class.css";
                    match = ":\\<(active|after|before|first-letter|first-line|hover|link|visited)\\>";
                }
            );
        },
        {
            name = "comment.block.css";
            begin = "/\\*";
            end = "\\*/";
        },
        {
            name = "invalid.bad-comma.css";
            match = "[^} \\t{/@][^{,]*?(,)\\s*?(?=\\{)";
        },
        {
            name = "keyword.at-rule.css";
            begin = "^\\s*(@\\<(import|media)\\>)";
            end = "\\s*((?=;|\\}))";
            patterns = (
                {
                    name = "keyword.at-rule.value.string.double-quoted.css";
                    begin = "\"";
                    end = "\"";
                    swallow = "\\\\.";
                },
                {
                    name = "keyword.at-rule.import.url.css";
                    begin = "(url\\s*\\(\\s*)";
                    end = "\\s*\\)\\s*";
                    patterns = (
                        {
                            name = "keyword.at-rule.value.string.un-quoted.css";
                            match = "[^'\"\)]";
                        },
                        {
                            name = "keyword.at-rule.value.string.single-quoted.css";
                            begin = "'";
                            end = "'";
                            swallow = "\\\\.";
                        },
                        {
                            name = "keyword.at-rule.value.string.double-quoted.css";
                            begin = "\"";
                            end = "\"";
                            swallow = "\\\\.";
                        }
                    );
                },
                {
                    name = "keyword.at-rule.medium.css";
                    match = "\\<(all|aural|braille|embossed|handheld|print|projection|screen|tty|tv)\\>,?";
                }
            );
        },
        {
            begin = "\\{";
            end = "\\}";
            patterns = (
                {
                    name = "comment.block.css";
                    begin = "/\\*";
                    end = "\\*/";
                },
                {
                    name = "keyword.property.css";
                    match = "\\<(azimuth|background|background-attachment|background-color|background-image|background-position|background-repeat|border|border-bottom|border-bottom-color|border-bottom-style|border-bottom-width|border-collapse|border-color|border-left|border-left-color|border-left-style|border-left-width|border-right|border-right-color|border-right-style|border-right-width|border-spacing|border-style|border-top|border-top-color|border-top-style|border-top-width|border-width|bottom|caption-side|clear|clip|color|content|counter-increment|counter-reset|cue|cue-after|cue-before|cursor|direction|display|elevation|empty-cells|float|font|font-family|font-size|font-size-adjust|font-stretch|font-style|font-variant|font-weight|height|left|letter-spacing|line-height|list-style|list-style-image|list-style-position|list-style-type|margin|margin-bottom|margin-left|margin-right|margin-top|marker-offset|marks|max-height|max-width|min-height|min-width|-moz-border-radius|orphans|outline|outline-color|outline-style|outline-width|overflow|padding|padding-bottom|padding-left|padding-right|padding-top|page|page-break-after|page-break-before|page-break-inside|pause|pause-after|pause-before|pitch|pitch-range|play-during|position|quotes|richness|right|size|speak|speak-header|speak-numeral|speak-punctuation|speech-rate|stress|table-layout|text-align|text-decoration|text-indent|text-shadow|text-transform|top|unicode-bidi|vertical-align|visibility|voice-family|volume|white-space|widows|width|word-spacing|z-index)\\>";
                },
                {
                    name = "keyword.property.value.css";
                    begin = ":\\s*";
                    end = "\\s*(;|(?=\\}))";
                    patterns = (
                        {
                            name = "keyword.property.value.keyword.css";
                            match = "\\<(absolute|all-scroll|always|auto|baseline|below|bidi-override|block|bold|bolder|both|bottom|break-all|break-word|capitalize|center|char|circle|col-resize|collapse|crosshair|dashed|decimal|default|disabled|disc|distribute|distribute-all-lines|distribute-letter|distribute-space|dotted|double|e-resize|ellipsis|fixed|groove|hand|help|hidden|horizontal|ideograph-alpha|ideograph-numeric|ideograph-parenthesis|ideograph-space|\ninactive|inherit|inline|inline-block|inset|inside|inter-ideograph|inter-word|italic|justify|keep-all|lighter|line|line-edge|left|line-through|list-item|loose|lower-alpha||lower-roman|lowercase|lr-tb|ltr|medium|middle|move|n-resize|ne-resize|newspaper|no-drop|no-repeat|nw-resize|none|normal|not-allowed|nowrap|oblique|outset|outside|overline|pointer|progress|\nrelative|repeat|repeat-x|repeat-y|right|ridge|row-resize|rtl|s-resize|scroll|se-resize|separate|small-caps|solid|square|static|strict|super|sw-resize|table-footer-group|table-header-group|tb-rl|text|text-bottom|text-top|thick|thin|top|transparent|underline|upper-alpha|upper-roman|uppercase|vertical-ideographic|vertical-text|visible|w-resize|wait|whitespace)\\>";
                        },
                        {
                            name = "keyword.property.value.font.css";
                            match = "(\\<(?i:arial|century|comic|courier|garamond|georgia|helvetica|impact|lucida|symbol|system|tahoma|times|trebuchet|utopia|verdana|webdings|sans-serif|serif|monospace)\\>|(\"([a-zA-Z0-9-_]|\\s)+\")|('([a-zA-Z0-9-_]|\\s)+')),?";
                        },
                        {
                            name = "keyword.property.value.digit.css";
                            match = "(-|\\+)?\\s*[0-9]+(\\.[0-9]+)?";
                        },
                        {
                            name = "keyword.property.value.unit.css";
                            match = "(px|pt|cm|mm|in|em|ex|pc|%)";
                        },
                        {
                            name = "keyword.property.value.color.css";
                            match = "(#)([0-9a-fA-F]{3}|[0-9a-fA-F]{6})\\>";
                        },
                        {
                            name = "keyword.property.value.string.double-quoted.css";
                            begin = "\"";
                            end = "\"";
                            swallow = "\\\\.";
                        },
                        {
                            name = "keyword.property.value.function.css";
                            begin = "(rgb|url|attr|counter|counters)\\s*\\(";
                            end = "\\)";
                            patterns = (
                                {
                                    name = "keyword.property.value.string.un-quoted.css";
                                    match = "[^'\"]";
                                },
                                {
                                    name = "keyword.property.value.string.single-quoted.css";
                                    begin = "'";
                                    end = "'";
                                    swallow = "\\\\.";
                                },
                                {
                                    name = "keyword.property.value.string.double-quoted.css";
                                    begin = "\"";
                                    end = "\"";
                                    swallow = "\\\\."; 
                                },
                                {
                                    name = "keyword.property.value.rgb-value.css";
                                    match = "(\\<0*((1?[0-9]{1,2})|(2([0-4][0-9]|5[0-5])))\\s*,\\s*)(0*((1?[0-9]{1,2})|(2([0-4][0-9]|5[0-5])))\\s*,\\s*)(0*((1?[0-9]{1,2})|(2([0-4][0-9]|5[0-5])))\\>)";
                                },
                                {
                                    name = "keyword.property.value.rgb-percentage.css";
                                    match = "\\<([0-9]{1,2}|100)\\s*%,\\s*([0-9]{1,2}|100)\\s*%,\\s*([0-9]{1,2}|100)\\s*%";
                                }
                            );
                        }
                    );
                }
            );
        }
    );
    uuid = "69AA0917-B7BB-11D9-A7E2-000D93C8BE28";
}